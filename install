#!/bin/bash
set -e

. config
rm -rf $OUT_ROOT

mkdir -p $HOST_OUT
mkdir -p $SHARED_OUT

cp -v Microsoft.NETCore.App.deps.json $SHARED_OUT
git -C core-setup rev-parse HEAD > $SHARED_OUT/.version
echo $VERSION >> $SHARED_OUT/.version

cd libuv
cp -v .libs/libuv.so $SHARED_OUT
cd ..

cd core-setup
cd resources
cp -v LICENSE.txt ThirdPartyNotices.txt $OUT_ROOT
cd ..
cd src/corehost/cli
cp -v exe/dotnet $OUT_ROOT
cp -v exe/dotnet $SHARED_OUT
cp -v exe/dotnet $SHARED_OUT/corehost
cp -v dll/libhostpolicy.so $SHARED_OUT
cp -v fxr/libhostfxr.so $HOST_OUT
cp -v fxr/libhostfxr.so $SHARED_OUT
cd ../../..
cd ..

cd coreclr
cd bin/Product/$OS_NAME.$ARCH.$BUILD_CONFIG
cat $FILES_ROOT/coreclr.txt | xargs -I % cp -v % $SHARED_OUT
cd ../../..
cd ..

cd corefx
cd bin
cd $OS_NAME.$ARCH.$BUILD_CONFIG/Native
cat $FILES_ROOT/corefx-native.txt | xargs -I % cp -v % $SHARED_OUT
cd ../..
cat $FILES_ROOT/corefx-packages.txt | xargs -I % sh -c "find * -name %.dll | grep ^[LUA].*/%/%.dll$" | xargs -I % cp -v % $SHARED_OUT
cp -v ref/Microsoft.VisualBasic/10.0.0.0/Microsoft.VisualBasic.dll $SHARED_OUT
cd ..
cd ..

cd roslyn
cd Binaries/$BUILD_CONFIG
cat $FILES_ROOT/roslyn.txt | xargs -I % cp -v % $SHARED_OUT
cd ../..
cd ..

cd cli
#./build.sh
#cd bin
#cp
#cd ..
cd ..
